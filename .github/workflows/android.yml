name: Deploy To Firebase

on:
  push:
   branches:
     - '*'
jobs:
  build:
    name: Building and distributing app
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run Unit Tests
        run: ./gradlew test

      - name: Check Unit Test Results
        run: |
          if [ $? -eq 0 ]; then
            echo "Unit tests passed. Proceeding with deployment."
            echo "UNIT_TESTS_PASS=true" >> $GITHUB_ENV
          else
            echo "Unit tests failed. Deployment aborted."
            echo "UNIT_TESTS_PASS=false" >> $GITHUB_ENV
          fi

      - name: Execute Gradle command - assembleDebug
        run: ./gradlew assembleDebug

      - name: Get version information
        id: version
        run: echo "::set-output name=versionName::$(./gradlew -q app:printVersionName)" && echo "::set-output name=versionCode::$(./gradlew -q app:printVersionCode)"

      - name: Check commit message
        id: commit-check
        run: |
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          echo "Commit message: $COMMIT_MESSAGE"
          if [[ "${{ github.event.head_commit.message }}" != *"[uploadNow]"* ]]; then
            echo "Commit message does not contain [uploadNow]. Skipping Firebase upload."
            echo "UPLOAD=false" >> $GITHUB_ENV
            exit 0
          else
            echo "UPLOAD=true" >> $GITHUB_ENV
            echo "COMMIT_MESSAGE=$(echo $COMMIT_MESSAGE | sed 's/\"/\\\"/g')" >> $GITHUB_ENV
          fi
      - name: Filter commit message
        id: filtered-message
        run: echo "::set-output name=filtered_message::$(echo ${{ steps.commit-message.outputs.message }} | sed 's/\[uploadNow\]//g')"
      - name: upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.5.1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: testers
          file: app/build/outputs/apk/debug/app-debug.apk
          releaseNotes: ${{ steps.commit-message.outputs.filtered_message }}
